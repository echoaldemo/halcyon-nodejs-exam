{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Echo\\\\Documents\\\\HALCYON\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext, useEffect } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { get } from \"../utils/utils\";\nimport { StateContext } from \"../context/Context\";\n\nvar Index = function Index(props) {\n  _s();\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(\"\"),\n      task = _useState[0],\n      setTask = _useState[1];\n\n  useEffect(function () {\n    dispatch({\n      type: \"INITIAL_STATE\",\n      payload: props.tasks\n    });\n  }, []);\n\n  var submit = function submit(e) {\n    e.preventDefault();\n    dispatch({\n      type: \"ADD_TODO\",\n      payload: task\n    });\n    setTask(\"\");\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    onChange: function onChange(e) {\n      return setTask(e.target.value);\n    },\n    value: task,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Add Task\"))), __jsx(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 1fr\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, state.tasks.length > 0 && state.tasks.map(function (task) {\n    return __jsx(React.Fragment, null, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: task.status,\n      onChange: function onChange() {\n        return dispatch({\n          type: \"DONE_TODO\",\n          payload: task\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }), __jsx(\"span\", {\n      style: task.status ? {\n        textDecoration: \"none\"\n      } : {\n        textDecoration: \"line-through\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, task.task));\n  })));\n};\n\n_s(Index, \"tCc0QZVXUdwsdffEt27V/Wdj+Vo=\");\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response, tasks;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return get(\"/tasks\");\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.data;\n\n        case 5:\n          tasks = _context.sent;\n          return _context.abrupt(\"return\", {\n            tasks: tasks\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/Echo/Documents/HALCYON/pages/index.js"],"names":["useState","useContext","useEffect","Layout","get","StateContext","Index","props","state","dispatch","task","setTask","type","payload","tasks","submit","e","preventDefault","target","value","display","gridTemplateColumns","length","map","status","textDecoration","getInitialProps","response","data"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { get } from \"../utils/utils\";\r\nimport { StateContext } from \"../context/Context\";\r\n\r\nconst Index = (props) => {\r\n  const { state, dispatch } = useContext(StateContext);\r\n  const [task, setTask] = useState(\"\");\r\n  useEffect(() => {\r\n    dispatch({ type: \"INITIAL_STATE\", payload: props.tasks });\r\n  }, []);\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"ADD_TODO\", payload: task });\r\n    setTask(\"\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <form onSubmit={submit}>\r\n          <input onChange={(e) => setTask(e.target.value)} value={task} />\r\n          <button type=\"submit\">Add Task</button>\r\n        </form>\r\n      </div>\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\r\n        {state.tasks.length > 0 &&\r\n          state.tasks.map((task) => (\r\n            <>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={task.status}\r\n                onChange={() => dispatch({ type: \"DONE_TODO\", payload: task })}\r\n              />\r\n              <span\r\n                style={\r\n                  task.status\r\n                    ? { textDecoration: \"none\" }\r\n                    : { textDecoration: \"line-through\" }\r\n                }\r\n              >\r\n                {task.task}\r\n              </span>\r\n            </>\r\n          ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n  const response = await get(\"/tasks\");\r\n  const tasks = await response.data;\r\n  return { tasks };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}