{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Echo\\\\Documents\\\\HALCYON\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { get } from \"../utils/utils\";\nimport { StateContext } from \"../context\";\n\nconst Index = props => {\n  const {\n    state,\n    dispatch\n  } = useContext(StateContext);\n  const {\n    0: task,\n    1: setTask\n  } = useState(\"\");\n\n  const submit = e => {// e.preventDefault();\n    // dispatch({ type: \"ADD_TODO\", payload: task });\n    // setTask(\"\");\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    onChange: e => setTask(e.target.value),\n    value: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"Add Task\"))));\n};\n\nIndex.getInitialProps = async () => {\n  const response = await get(\"/tasks\");\n  const tasks = await response.data;\n  return {\n    tasks\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Echo/Documents/HALCYON/pages/index.js"],"names":["useState","Layout","get","StateContext","Index","props","state","dispatch","useContext","task","setTask","submit","e","target","value","getInitialProps","response","tasks","data"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBC,UAAU,CAACL,YAAD,CAAtC;AAEA,QAAM;AAAA,OAACM,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMW,MAAM,GAAIC,CAAD,IAAO,CACpB;AACA;AACA;AACD,GAJD;;AAKA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAED,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAGC,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/B;AAAiD,IAAA,KAAK,EAAEL,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,CADF,CADF;AAiCD,CA1CD;;AA4CAL,KAAK,CAACW,eAAN,GAAwB,YAAY;AAClC,QAAMC,QAAQ,GAAG,MAAMd,GAAG,CAAC,QAAD,CAA1B;AACA,QAAMe,KAAK,GAAG,MAAMD,QAAQ,CAACE,IAA7B;AACA,SAAO;AAAED,IAAAA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeb,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { get } from \"../utils/utils\";\r\nimport { StateContext } from \"../context\";\r\n\r\nconst Index = (props) => {\r\n  const { state, dispatch } = useContext(StateContext);\r\n\r\n  const [task, setTask] = useState(\"\");\r\n  const submit = (e) => {\r\n    // e.preventDefault();\r\n    // dispatch({ type: \"ADD_TODO\", payload: task });\r\n    // setTask(\"\");\r\n  };\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <form onSubmit={submit}>\r\n          <input onChange={(e) => setTask(e.target.value)} value={task} />\r\n          <button type=\"submit\">Add Task</button>\r\n        </form>\r\n      </div>\r\n      {/* <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\r\n          {props.tasks.length > 0 &&\r\n            state.tasks.map((task) => (\r\n              <>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={task.status === \"not done\" ? false : true}\r\n                  onChange={() =>\r\n                    dispatch({ type: \"DONE_TODO\", payload: task })\r\n                  }\r\n                />\r\n                <span\r\n                  style={\r\n                    task.status === \"done\"\r\n                      ? { textDecoration: \"line-through\" }\r\n                      : { textDecoration: \"none\" }\r\n                  }\r\n                >\r\n                  {task.task}\r\n                </span>\r\n              </>\r\n            ))}\r\n        </div> */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n  const response = await get(\"/tasks\");\r\n  const tasks = await response.data;\r\n  return { tasks };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}