{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { remove, put } from \"../utils/utils\";\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"INITIAL_STATE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: action.payload\n      });\n\n    case \"ADD_TODO\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: [...state.tasks, action.payload]\n      });\n\n    case \"DONE_TODO\":\n      const temp = [...state.tasks].map(item => {\n        if (item.id === action.payload.id) {\n          return _objectSpread(_objectSpread({}, action.payload), {}, {\n            task_status: !action.payload.task_status\n          });\n        } else return item;\n      });\n      const edited = temp.filter(task => task.id === action.payload.id);\n      put(`/task/${action.payload.id}`, _objectSpread({}, edited[0]));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: [...temp]\n      });\n\n    case \"UPDATE_TODO\":\n      const updateTemp = [...state.tasks].map(item => {\n        if (item.id === action.payload.id) {\n          return _objectSpread(_objectSpread({}, action.payload), {}, {\n            task_name: action.payload.task_name\n          });\n        } else return item;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: [...updateTemp]\n      });\n\n    case \"DELETE_TODO\":\n      const removed = [...state.tasks].filter(task => task.id !== action.payload.id);\n      remove(`/task/${action.payload.id}`);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: [...removed]\n      });\n  }\n}","map":{"version":3,"sources":["C:/Users/Echo/Documents/HALCYON/reducer/Reducer.js"],"names":["remove","put","reducer","state","action","type","tasks","payload","temp","map","item","id","task_status","edited","filter","task","updateTemp","task_name","removed"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,GAAjB,QAA4B,gBAA5B;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,6CACKF,KADL;AAEEG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAFhB;;AAIF,SAAK,UAAL;AACE,6CACKJ,KADL;AAEEG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACG,OAAxB;AAFT;;AAIF,SAAK,WAAL;AACE,YAAMC,IAAI,GAAG,CAAC,GAAGL,KAAK,CAACG,KAAV,EAAiBG,GAAjB,CAAsBC,IAAD,IAAU;AAC1C,YAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA/B,EAAmC;AACjC,iDACKP,MAAM,CAACG,OADZ;AAEEK,YAAAA,WAAW,EAAE,CAACR,MAAM,CAACG,OAAP,CAAeK;AAF/B;AAID,SALD,MAKO,OAAOF,IAAP;AACR,OAPY,CAAb;AAQA,YAAMG,MAAM,GAAGL,IAAI,CAACM,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAAjD,CAAf;AACAV,MAAAA,GAAG,CAAE,SAAQG,MAAM,CAACG,OAAP,CAAeI,EAAG,EAA5B,oBAAoCE,MAAM,CAAC,CAAD,CAA1C,EAAH;AACA,6CACKV,KADL;AAEEG,QAAAA,KAAK,EAAE,CAAC,GAAGE,IAAJ;AAFT;;AAIF,SAAK,aAAL;AACE,YAAMQ,UAAU,GAAG,CAAC,GAAGb,KAAK,CAACG,KAAV,EAAiBG,GAAjB,CAAsBC,IAAD,IAAU;AAChD,YAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA/B,EAAmC;AACjC,iDACKP,MAAM,CAACG,OADZ;AAEEU,YAAAA,SAAS,EAAEb,MAAM,CAACG,OAAP,CAAeU;AAF5B;AAID,SALD,MAKO,OAAOP,IAAP;AACR,OAPkB,CAAnB;AAQA,6CACKP,KADL;AAEEG,QAAAA,KAAK,EAAE,CAAC,GAAGU,UAAJ;AAFT;;AAIF,SAAK,aAAL;AACE,YAAME,OAAO,GAAG,CAAC,GAAGf,KAAK,CAACG,KAAV,EAAiBQ,MAAjB,CACbC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EADvB,CAAhB;AAGAX,MAAAA,MAAM,CAAE,SAAQI,MAAM,CAACG,OAAP,CAAeI,EAAG,EAA5B,CAAN;AACA,6CACKR,KADL;AAEEG,QAAAA,KAAK,EAAE,CAAC,GAAGY,OAAJ;AAFT;AA5CJ;AAiDD","sourcesContent":["import { remove, put } from \"../utils/utils\";\r\nexport default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"INITIAL_STATE\":\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n      };\r\n    case \"ADD_TODO\":\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, action.payload],\r\n      };\r\n    case \"DONE_TODO\":\r\n      const temp = [...state.tasks].map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          return {\r\n            ...action.payload,\r\n            task_status: !action.payload.task_status,\r\n          };\r\n        } else return item;\r\n      });\r\n      const edited = temp.filter((task) => task.id === action.payload.id);\r\n      put(`/task/${action.payload.id}`, { ...edited[0] });\r\n      return {\r\n        ...state,\r\n        tasks: [...temp],\r\n      };\r\n    case \"UPDATE_TODO\":\r\n      const updateTemp = [...state.tasks].map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          return {\r\n            ...action.payload,\r\n            task_name: action.payload.task_name,\r\n          };\r\n        } else return item;\r\n      });\r\n      return {\r\n        ...state,\r\n        tasks: [...updateTemp],\r\n      };\r\n    case \"DELETE_TODO\":\r\n      const removed = [...state.tasks].filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      remove(`/task/${action.payload.id}`);\r\n      return {\r\n        ...state,\r\n        tasks: [...removed],\r\n      };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}