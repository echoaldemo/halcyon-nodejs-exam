{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Echo\\\\Documents\\\\HALCYON\\\\context\\\\Context.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useReducer } from \"react\";\nimport reducer from \"../reducer/Reducer\";\nimport { get } from \"../utils/utils\";\nexport const StateContext = createContext();\n\nconst StateProvider = ({\n  props,\n  children\n}) => {\n  let initialState = {\n    tasks: props.tasks\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  return __jsx(StateContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nStateProvider.getInitialProps = async () => {\n  const response = await get(\"/tasks\");\n  const tasks = await response.data;\n  return {\n    tasks\n  };\n};\n\nexport default StateProvider;","map":{"version":3,"sources":["C:/Users/Echo/Documents/HALCYON/context/Context.js"],"names":["createContext","useReducer","reducer","get","StateContext","StateProvider","props","children","initialState","tasks","state","dispatch","getInitialProps","response","data"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;;AAEP,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAC7C,MAAIC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEH,KAAK,CAACG;AADI,GAAnB;AAGA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,UAAU,CAACC,OAAD,EAAUM,YAAV,CAApC;AACA,SACE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CAVD;;AAYAF,aAAa,CAACO,eAAd,GAAgC,YAAY;AAC1C,QAAMC,QAAQ,GAAG,MAAMV,GAAG,CAAC,QAAD,CAA1B;AACA,QAAMM,KAAK,GAAG,MAAMI,QAAQ,CAACC,IAA7B;AACA,SAAO;AAAEL,IAAAA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeJ,aAAf","sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport reducer from \"../reducer/Reducer\";\r\nimport { get } from \"../utils/utils\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nconst StateProvider = ({ props, children }) => {\r\n  let initialState = {\r\n    tasks: props.tasks,\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <StateContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nStateProvider.getInitialProps = async () => {\r\n  const response = await get(\"/tasks\");\r\n  const tasks = await response.data;\r\n  return { tasks };\r\n};\r\n\r\nexport default StateProvider;\r\n"]},"metadata":{},"sourceType":"module"}