{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Echo\\\\Documents\\\\HALCYON\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext, useEffect } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { get, post } from \"../utils/utils\";\nimport { StateContext } from \"../context/Context\";\n\nvar Index = function Index(props) {\n  _s();\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(\"\"),\n      task = _useState[0],\n      setTask = _useState[1];\n\n  useEffect(function () {\n    dispatch({\n      type: \"INITIAL_STATE\",\n      payload: props.tasks\n    });\n  }, []);\n\n  var submit = function submit(e) {\n    e.preventDefault();\n    post(\"/tasks\", {\n      task_name: task,\n      task_status: false\n    }).then(function (res) {\n      dispatch({\n        type: \"ADD_TODO\",\n        payload: res.data\n      });\n      setTask(\"\");\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    onChange: function onChange(e) {\n      return setTask(e.target.value);\n    },\n    value: task,\n    className: \"form-control\",\n    placeholder: \"Enter a task for today\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Add Task\"))), __jsx(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 1fr\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, state.tasks.length > 0 && state.tasks.map(function (task) {\n    return __jsx(React.Fragment, null, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: task.task_status,\n      onChange: function onChange() {\n        return dispatch({\n          type: \"DONE_TODO\",\n          payload: task\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }), __jsx(\"span\", {\n      style: task.task_status ? {\n        textDecoration: \"line-through\"\n      } : {\n        textDecoration: \"none\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, task.task_name));\n  })));\n};\n\n_s(Index, \"tCc0QZVXUdwsdffEt27V/Wdj+Vo=\");\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response, tasks;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return get(\"/tasks\");\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.data;\n\n        case 5:\n          tasks = _context.sent;\n          return _context.abrupt(\"return\", {\n            tasks: tasks\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/Echo/Documents/HALCYON/pages/index.js"],"names":["useState","useContext","useEffect","Layout","get","post","StateContext","Index","props","state","dispatch","task","setTask","type","payload","tasks","submit","e","preventDefault","task_name","task_status","then","res","data","target","value","display","gridTemplateColumns","length","map","textDecoration","getInitialProps","response"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { get, post } from \"../utils/utils\";\r\nimport { StateContext } from \"../context/Context\";\r\n\r\nconst Index = (props) => {\r\n  const { state, dispatch } = useContext(StateContext);\r\n  const [task, setTask] = useState(\"\");\r\n  useEffect(() => {\r\n    dispatch({ type: \"INITIAL_STATE\", payload: props.tasks });\r\n  }, []);\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    post(\"/tasks\", { task_name: task, task_status: false }).then((res) => {\r\n      dispatch({ type: \"ADD_TODO\", payload: res.data });\r\n      setTask(\"\");\r\n    });\r\n  };\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <form onSubmit={submit}>\r\n          <input\r\n            onChange={(e) => setTask(e.target.value)}\r\n            value={task}\r\n            className=\"form-control\"\r\n            placeholder=\"Enter a task for today\"\r\n          />\r\n          <button type=\"submit\">Add Task</button>\r\n        </form>\r\n      </div>\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\r\n        {state.tasks.length > 0 &&\r\n          state.tasks.map((task) => (\r\n            <>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={task.task_status}\r\n                onChange={() => dispatch({ type: \"DONE_TODO\", payload: task })}\r\n              />\r\n              <span\r\n                style={\r\n                  task.task_status\r\n                    ? { textDecoration: \"line-through\" }\r\n                    : { textDecoration: \"none\" }\r\n                }\r\n              >\r\n                {task.task_name}\r\n              </span>\r\n            </>\r\n          ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n  const response = await get(\"/tasks\");\r\n  const tasks = await response.data;\r\n  return { tasks };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}